interface NotOp for T {
    __not__(a: T): T;
}

implements NotOp for boolean {
    __not__(a: boolean): boolean { boolean#__not__(a) }
}

interface OrOp for T {
    __or__(a: T, b: T): T;
}

implements OrOp for boolean {
    __or__(a: boolean, b: boolean): boolean { boolean#__or__(a, b) }
}

interface AndOp for T {
    __and__(a: T, b: T): T;
}

implements AndOp for boolean {
    __and__(a: boolean, b: boolean): boolean { boolean#__and__(a, b) }
}

interface LeOp for T {
    __le__(a: T, b: T): boolean;
}

implements LeOp for number {
    __le__(a: number, b: number): boolean { number#__le__(a, b) }
}

interface GeOp for T {
    __ge__(a: T, b: T): boolean;
}

implements GeOp for number {
    __ge__(a: number, b: number): boolean { number#__ge__(a, b) }
}

interface LtOp for T {
    __lt__(a: T, b: T): boolean;
}

implements LtOp for number {
    __lt__(a: number, b: number): boolean { number#__lt__(a, b) }
}

interface GtOp for T {
    __gt__(a: T, b: T): boolean;
}

implements GtOp for number {
    __gt__(a: number, b: number): boolean { number#__gt__(a, b) }
}

interface AddOp for T {
    __add__(a: T, b: T): T;
}

implements AddOp for number {
    __add__(a: number, b: number): number { number#__add__(a, b) }
}

interface SubOp for T {
    __sub__(a: T, b: T): T;
}

implements SubOp for number {
    __sub__(a: number, b: number): number { number#__sub__(a, b) }
}
