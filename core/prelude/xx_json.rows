interface ToJSON {
    toJSON(a: this): string {
        switch (typeof a) {
            case TypeofObject:
                "{" + (keyof a).map((k) => "\"" + k.toString() + "\":" + (a @ k).toJSON()).join(",") + "}"
            case TypeofEnum:
                "{" + (keyof a).map((k) => "\"" + k.toString() + "\":" + (a @ k).toJSON()).join(",") + "}"
            case x:
                a.toJSON()
        }
    }
}

instanceof ToJSON for unit {
    toJSON(a: unit): string {
        "null"
    }
}

instanceof ToJSON for number {
    toJSON(a: number): string {
        a.toString()
    }
}

instanceof ToJSON for bigint {
    toJSON(a: bigint): string {
        a.toString()
    }
}

instanceof ToJSON for string {
    toJSON(a: string): string {
        json#stringify(a)
    }
}

instanceof ToJSON for boolean {
    toJSON(a: boolean): string {
        a.toString()
    }
}
