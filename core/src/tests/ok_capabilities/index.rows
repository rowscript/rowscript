throw DB<T> {
    open(dsn: string): T;
    close(db: T);
}

const dsn = "mysql://john:pass@localhost:3306/my_db";

function f0() throw DB {
    const db = dsn.open();
    close(db);
}

type MySQLConn;
type MySQL = {conn: MySQLConn};

function connectMySQL(dsn: string): MySQLConn;
function closeMySQL(conn: MySQLConn);

function f1() {
    try {
        f0()
    } catch (DB<MySQL>) {
        open(dsn: string): MySQL { {conn: dsn.connectMySQL()} }
        close(db: MySQL) { db.conn.closeMySQL() }
    }
}

f1();

// Cannot do this:
//instanceof DB<MySQL> {
//    open(dsn: string): MySQL { {conn: dsn.connectMySQL()} }
//    close(db: MySQL) { db.conn.closeMySQL() }
//}

type Data = {n: number};

interface UseDB<T> {
    useDB() throw DB;
}

instanceof UseDB<Data> {
    useDB() throw DB {
        f0();
    }
}
