function inc(n: number): number;

function f(n: [Z | S]): number {
    switch (n) {
    case Z: 0
    case S: inc(f(Z))
    }
}

function g(): number {
    f(S)
}

function f0<T>(init: T, n: number, f: (a: T) => T): T {
    (n < 0) ? init : f0(f(init), n - 1, f)
}
// This fails...
//const a = f0("", 3, (s) => s + "0");
