type A = {a: string};
type B = [B0: string | B1];
type C = [C0: A | C1: B];
type D = {a: A, b: B};

type E = {_a: string};
type F = [_F0 | _F1];

type G = string;

const x0: Reflect<A> = {
    kind: RepKindObject,
    value: {a: "hello"},
    props: {
        a: {
            name: "a",
            kind: RepKindString
        }
    }
};

const x1: Reflect<B> = {
    kind: RepKindEnum,
    value: B0("hello"),
    variants: {
        caseB0: {
            name: "B0",
            kind: RepKindString
        },
        caseB1: {
            name: "B1",
            kind: RepKindUnit
        }
    }
};

const x2: Reflect<C> = {
    kind: RepKindEnum,
    value: C0({a: "hello"}),
    variants: {
        caseC0: {
            name: "C0",
            kind: {
                kind: RepKindObject,
                props: {
                    a: {
                        name: "a",
                        kind: RepKindString
                    }
                }
            }
        },
        caseC1: {
            name: "C1",
            kind: {
                kind: RepKindEnum,
                variants: {
                    caseB0: {
                        name: "B0",
                        kind: RepKindString
                    },
                    caseB1: {
                        name: "B1",
                        kind: RepKindUnit
                    }
                }
            }
        }
    }
};

const x3: Reflect<D> = {
    kind: RepKindObject,
    value: {
        a: {a: "hello"},
        b: B1
    },
    props: {
        a: {
            name: "a",
            kind: {
                kind: RepKindObject,
                props: {
                    a: {
                        name: "a",
                        kind: RepKindString
                    }
                }
            }
        },
        b: {
            name: "b",
            kind: {
                kind: RepKindEnum,
                variants: {
                    caseB0: {
                        name: "B0",
                        kind: RepKindString
                    },
                    caseB1: {
                        name: "B1",
                        kind: RepKindUnit
                    }
                }
            }
        }
    }
};
