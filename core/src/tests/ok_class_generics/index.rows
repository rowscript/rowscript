function log<T>(n: T);

class Foo<T> {
    n: T;
    update() { log(this.n) }
}

interface Updater<T> {
    update<T>(a: Updater<T>);
}

function doSomething<U: type -> type, T>(updater: U<T>) where Updater<U> {
    updater.update();
}

doSomething<Foo>(new Foo(42));
